# Diagrama de Arquitectura E-Commerce-Ingeso

> Para visualizar este diagrama, instala una extensión de previsualización Mermaid en VS Code.

## Arquitectura y Flujo de Datos

El sistema está compuesto por dos servicios principales:
- **EcommerceBackend**: Servicio backend en JavaScript, expuesto en el puerto 80, alojado en Azure Container Apps.
- **EcommerceFront**: Servicio frontend en JavaScript, expuesto en el puerto 80, alojado en Azure Container Apps.

Ambos servicios están desplegados en un entorno de Azure Container Apps, permitiendo escalabilidad y administración centralizada.

```mermaid
graph TD
%% Services
svcazurecontainerapps_ecommercebackend["`Name: EcommerceBackend\nPath: EcommerceBackend\nLanguage: js\nPort: 80`"]
svcazurecontainerapps_ecommercefront["`Name: EcommerceFront\nPath: EcommerceFront\nLanguage: js\nPort: 80`"]
subgraph "Compute Resources"
%% Resources
subgraph containerappenv["Azure Container Apps (ACA) Environment"]
azurecontainerapps_ecommercebackend("`EcommerceBackend (Azure Container App)`")
azurecontainerapps_ecommercefront("`EcommerceFront (Azure Container App)`")
end
containerappenv:::cluster
end
subgraph "Dependency Resources"
%% Dependency Resources
end
%% Relationships
svcazurecontainerapps_ecommercebackend --> |"hosted on"| azurecontainerapps_ecommercebackend
svcazurecontainerapps_ecommercefront --> |"hosted on"| azurecontainerapps_ecommercefront
```

### Tecnologías soportadas para hosting:
- appservice
- function
- containerapp
- staticwebapp
- aks

### Recursos Azure soportados para dependencias:
- azureaisearch, azureaiservices, azureapplicationinsights, azurebotservice, azurecosmosdb, azurekeyvault, azuredatabaseformysql, azureopenai, azuredatabaseforpostgresql, azureprivateendpoint, azurecacheforredis, azuresqldatabase, azurestorageaccount, azureservicebus, azuresignalrservice, azurevirtualnetwork, azurewebpubsub.

¿La topología mostrada es la esperada? Si necesitas cambios, indícalos y actualizaré el diagrama.